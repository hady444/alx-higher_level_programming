>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> obj = BaseGeometry()
>>> type(obj)
<class '7-base_geometry.BaseGeometry'>

>>> type(BaseGeometry.__dict__['area'])
<class 'function'>

>>> type(BaseGeometry.__dict__['integer_validator'])
<class 'function'>

>>> obj = BaseGeometry()
>>> obj.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> obj.__class__.area()
Traceback (most recent call last):
TypeError: area() missing 1 required positional argument: 'self'


>>> obj.integer_validator(1, 1, 1)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> obj.area(10)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given

>>> obj = BaseGeometry()
>>> obj.integer_validator("HH", 5)

>>> obj.__class__.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'


>>> obj.integer_validator("GG", -2)
Traceback (most recent call last):
ValueError: GG must be greater than 0

integer_validator method float.0 value:
    >>> obj.integer_validator("foo", 3.0)
    Traceback (most recent call last):
    TypeError: foo must be an integer

integer_validator method float.x value:
    >>> obj.integer_validator("arg", 3.14)
    Traceback (most recent call last):
    TypeError: arg must be an integer

integer_validator method string value:
    >>> obj.integer_validator("Bar", "bar")
    Traceback (most recent call last):
    TypeError: Bar must be an integer

>>> obj.integer_validator(None, 5)

>>> obj.integer_validator("", 5)

>>> obj = BaseGeometry()
>>> obj.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> obj = BaseGeometry()
>>> obj.integer_validator("f")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> obj = BaseGeometry()
>>> obj.integer_validator(5)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> obj.integer_validator("zar", True)
Traceback (most recent call last):
TypeError: zar must be an integer

>>> obj.integer_validator("a", [1])
Traceback (most recent call last):
TypeError: a must be an integer

>>> obj.integer_validator("foo", None)
Traceback (most recent call last):
TypeError: foo must be an integer

>>> obj.integer_validator("key", 0)
Traceback (most recent call last):
ValueError: key must be greater than 0

>>> obj.integer_validator("Foo", (1, 2))
Traceback (most recent call last):
TypeError: Foo must be an integer

>>> obj.integer_validator("Foo", {1, 2})
Traceback (most recent call last):
TypeError: Foo must be an integer
